---
import Checkbox from "./Checkbox.astro";
import EventForm from "./EventForm.astro";
import i18next, { t } from "i18next";

const recaptchaSiteKey = import.meta.env.PUBLIC_G_RECAPTCHA_SITE_KEY;
---

<section class="p-4" id="contact-us-section">
  <div class="container">
    <h2 class="text-center">{t("contact-us")}</h2>

    <div class="mb-3">
      <form class="mt-3" id="contact-us-form">
        <input
          type="text"
          name="name"
          class="form-control mx-auto"
          placeholder={t("contact-us.form.name")}
          required
        />
        <!-- Add email, phone, a checkbox with "Request a live interaction" label, a checkbox with "Subscribe me to your newsletter" label -->
        <input
          type="email"
          name="email"
          class="form-control mx-auto"
          placeholder={t("contact-us.form.email")}
          required
        />
        <input
          type="tel"
          name="phone"
          class="form-control mx-auto"
          placeholder={t("contact-us.form.phone")}
          required
        />
        <input type="hidden" name="language" value={i18next.language} />
        <div class="checkbox">
          <Checkbox
            name="livechat"
            label={t("common.live-interaction") || ""}
            id="live-interaction"
            ariaLabel={t("common.live-interaction") || "Request a live chat"}
          />
        </div>
        <div class="checkbox">
          <Checkbox
            name="subscribe"
            label={t("contact-us.form.newsletter") || ""}
            id="newsletter"
            ariaLabel={t("contact-us.form.newsletter") ||
              "Subscribe to our newsletter"}
          />
        </div>

        <div class="g-recaptcha" data-sitekey={recaptchaSiteKey}></div>

        <button
          class="d-block btn btn-primary w-100 mx-auto"
          id="contact-us-btn">{t("common.submit")}</button
        >
      </form>
      <EventForm />
    </div>
  </div>
</section>

<style lang="scss">
  $max-width: 720px;

  section {
    background: linear-gradient(
        to left,
        rgba(0, 0, 0, 0.85),
        rgba(0, 0, 0, 0.85)
      ),
      url("../assets/images/bg-signup.webp");
    background-position: center;
    background-repeat: no-repeat;
    background-attachment: scroll;
    background-size: cover;

    input {
      max-width: $max-width;
      margin-bottom: 1rem;
    }

    .checkbox {
      max-width: $max-width;
      margin: 0 auto;
      margin-bottom: 1rem;
    }

    button {
      max-width: $max-width;
      padding: 0.75rem 2rem !important;
      margin-bottom: 1rem;
      text-transform: uppercase;
    }
  }

  .g-recaptcha {
    display: flex;
    justify-content: center;
    margin-bottom: 1rem;
  }
</style>

<script>
  import Swal from "sweetalert2";
  import { t } from "i18next";

  const form = document.getElementById("contact-us-form") as HTMLFormElement;
  if (form) {
    form.addEventListener("submit", (e) => {
      e.preventDefault();
      const button = document.getElementById(
        "contact-us-btn"
      ) as HTMLButtonElement;
      button.disabled = true;

      // @ts-ignore
      const recaptchaResponse = grecaptcha.getResponse(0);
      if (!recaptchaResponse) {
        return Swal.fire(
          t("contact-us.form.no-recaptcha-message") || "",
          "",
          "error"
        );
      }

      const formData = new FormData(form);
      const data = Object.fromEntries(formData.entries());

      fetch("https://cms.manhattanmanor.com/forms/src/sendContactForm.php", {
        method: "POST",
        body: JSON.stringify({ ...data, g_captcha: recaptchaResponse }),
      })
        .then((res) => res.json())
        .then((res) => {
          if (!res.error) {
            Swal.fire({
              title: t("common.success") || "Success!",
              text:
                t("contact-us.form.success-message") ||
                "Your message has been sent. We will get back to you shortly. Thank you!",
              confirmButtonText: t("common.ok") || "OK",
              confirmButtonColor: "#d9b812",
            });
            form.reset();
            // @ts-ignore
            grecaptcha.reset();
            button.disabled = false;
          } else {
            Swal.fire({
              title: t("common.error") || "Error!",
              text:
                t("contact-us.form.error-message") ||
                "Something went wrong. Please try again later.",
              icon: "error",
              confirmButtonText: t("common.ok") || "OK",
              confirmButtonColor: "#d9b812",
            });
            button.disabled = false;
          }
        })
        .catch((err) => {
          console.error(err);
          Swal.fire({
            title: t("common.error") || "Error!",
            text:
              t("contact-us.form.error-message") ||
              "Something went wrong. Please try again later.",
            icon: "error",
            confirmButtonText: t("common.ok") || "OK",
            confirmButtonColor: "#d9b812",
          });
          button.disabled = false;
        });
    });
  }
</script>
