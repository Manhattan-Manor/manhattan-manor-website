---
import Checkbox from "./Checkbox.astro";
import i18next, { t } from "i18next";

const recaptchaSiteKey = import.meta.env.PUBLIC_G_RECAPTCHA_SITE_KEY;
---

<button
  class="d-block btn btn-secondary w-100 mx-auto"
  data-bs-toggle="modal"
  data-bs-target="#event-modal"
  type="button"
>
  {t("contact-us.form.tell-us-more")}
</button>

<!-- Modal -->
<div
  class="modal fade"
  id="event-modal"
  tabindex="-1"
  aria-labelledby="tellUsMoreAboutYourEventModal"
  aria-hidden="true"
  data-bs-theme="dark"
>
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <form id="event-form">
        <div class="modal-header">
          <h1 class="modal-title fs-5">{t("contact-us.form.title")}</h1>
          <button
            type="button"
            class="btn-close"
            data-bs-dismiss="modal"
            aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="row">
            <div class="col-12 col-sm-6 mb-3">
              <label for="firstname" class="form-label"
                >{t("contact-us.form.first-name")}</label
              >
              <input
                type="text"
                class="form-control"
                name="firstname"
                placeholder={t("contact-us.form.first-name")}
                data-bs-theme="light"
                required
              />
            </div>
            <div class="col-12 col-sm-6 mb-3">
              <label for="lastname" class="form-label"
                >{t("contact-us.form.last-name")}</label
              >
              <input
                type="text"
                class="form-control"
                name="lastname"
                placeholder={t("contact-us.form.last-name")}
                data-bs-theme="light"
                required
              />
            </div>
            <div class="col-12 col-sm-6 mb-3">
              <label for="email" class="form-label"
                >{t("contact-us.form.email")}</label
              >
              <input
                type="email"
                class="form-control"
                name="email"
                placeholder={t("contact-us.form.email")}
                data-bs-theme="light"
                required
              />
            </div>
            <div class="col-12 col-sm-6 mb-3">
              <label for="phone" class="form-label"
                >{t("contact-us.form.phone")}</label
              >
              <input
                type="tel"
                class="form-control"
                name="phone"
                placeholder={t("contact-us.form.phone")}
                data-bs-theme="light"
                required
              />
            </div>
            <div class="col-12 col-sm-6 mb-3">
              <label for="eventdate" class="form-label"
                >{t("contact-us.form.date-of-event")}</label
              >
              <input
                type="date"
                class="form-control"
                name="eventdate"
                placeholder={t("contact-us.form.date-of-event")}
                data-bs-theme="light"
                required
              />
            </div>
            <div class="col-12 col-sm-6 mb-3">
              <label for="eventtime" class="form-label"
                >{t("contact-us.form.time-of-event")}</label
              >
              <div class="timepicker-ui">
                <input
                  type="text"
                  class="form-control"
                  name="eventtime"
                  data-bs-theme="light"
                  placeholder={t("contact-us.form.time-of-event")}
                  value="12:00 PM"
                  required
                />
              </div>
            </div>
            <div class="col-12">
              <label for="company" class="form-label"
                >{t("contact-us.form.company")}</label
              >
              <input
                type="text"
                class="form-control mb-3"
                name="company"
                placeholder={t("contact-us.form.company")}
                data-bs-theme="light"
                required
              />
              <label for="guests" class="form-label"
                >{t("contact-us.form.number-of-guests")}</label
              >
              <input
                type="number"
                class="form-control mb-3"
                name="guests"
                placeholder={t("contact-us.form.number-of-guests")}
                data-bs-theme="light"
                required
              />
              <label for="eventtype" class="form-label"
                >{t("contact-us.form.event-type")}</label
              >
              <input
                type="text"
                class="form-control mb-3"
                name="eventtype"
                placeholder={t("contact-us.form.event-type")}
                data-bs-theme="light"
                required
              />
              <label for="notes" class="form-label"
                >{t("contact-us.form.details")}</label
              >
              <textarea
                class="form-control mb-3"
                name="notes"
                rows="3"
                placeholder={t("contact-us.form.details.placeholder")}
                required
                data-bs-theme="light"></textarea>
              <Checkbox
                label={t("contact-us.form.newsletter") || ""}
                name="subscribe"
                ariaLabel={t("contact-us.form.newsletter") ||
                  "Subscribe to our newsletter"}
              />
              <input type="hidden" value={i18next.language} name="language" />
            </div>
            <div class="col-12">
              <div class="g-recaptcha" data-sitekey={recaptchaSiteKey}></div>
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <button
            type="button"
            class="btn btn-secondary"
            data-bs-dismiss="modal">{t("common.close")}</button
          >
          <button id="event-form-button" type="submit" class="btn btn-primary"
            >{t("common.submit")}</button
          >
        </div>
      </form>
    </div>
  </div>
</div>

<style lang="scss">
  @import "../assets/styles/_colors.scss";

  button {
    max-width: 720px;
    padding: 0.75rem 2rem !important;
    margin-bottom: 1rem;
    text-transform: uppercase;
  }

  .modal-content {
    background-color: #000;
    color: #fff;
    border: 3px solid $primary;
    border-radius: 0;
    box-shadow: 0 0 0 0;
  }

  .g-recaptcha {
    display: flex;
    justify-content: center;
    margin: 2rem 0;
  }
</style>

<script>
  import Swal from "sweetalert2";
  import { t } from "i18next";
  import { TimepickerUI } from "timepicker-ui";

  // Initialize timepicker
  const DOMElement = document.querySelector(".timepicker-ui") as HTMLElement;
  const options = {
    cancelLabel: t("common.cancel") || "Cancel",
    okLabel: t("common.ok") || "OK",
    timeLabel: t("common.select-time") || "Select time",
    mobileTimeLabel: t("common.enter-time") || "Enter time",
  };
  if (DOMElement) {
    const newTimepicker = new TimepickerUI(DOMElement, options);
    newTimepicker.create();
  }

  const form = document.getElementById("event-form") as HTMLFormElement;
  const button = document.getElementById(
    "event-form-button"
  ) as HTMLButtonElement;

  if (form) {
    form.addEventListener("submit", (e) => {
      e.preventDefault();
      button.disabled = true;

      // @ts-ignore
      const recaptchaResponse = grecaptcha.getResponse(1);
      if (!recaptchaResponse) {
        return Swal.fire(
          t("contact-us.form.no-recaptcha-message") || "",
          "",
          "error"
        );
      }

      const formData = new FormData(form);
      const data = Object.fromEntries(formData.entries());

      fetch(
        "https://cms.manhattanmanor.com/forms/src/sendReservationRequest.php",
        {
          method: "POST",
          body: JSON.stringify({ ...data, g_captcha: recaptchaResponse }),
        }
      )
        .then((res) => res.json())
        .then((res) => {
          if (!res.error) {
            Swal.fire({
              title: t("common.success") || "Success!",
              text:
                t("contact-us.form.success-message") ||
                "Your message has been sent. We will get back to you shortly. Thank you!",
              confirmButtonText: t("common.ok") || "OK",
              confirmButtonColor: "#d9b812",
            });
            form.reset();
            // @ts-ignore
            grecaptcha.reset();
            button.disabled = false;
          } else {
            Swal.fire({
              title: t("common.error") || "Error!",
              text:
                t("contact-us.form.error-message") ||
                "Something went wrong. Please try again later.",
              icon: "error",
              confirmButtonText: t("common.ok") || "OK",
              confirmButtonColor: "#d9b812",
            });
            button.disabled = false;
          }
        })
        .catch((err) => {
          console.error(err);
          Swal.fire({
            title: t("common.error") || "Error!",
            text:
              t("contact-us.form.error-message") ||
              "Something went wrong. Please try again later.",
            icon: "error",
            confirmButtonText: t("common.ok") || "OK",
            confirmButtonColor: "#d9b812",
          });
          button.disabled = false;
        });
    });
  }
</script>
